; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


;-----------------------------------------------------------------------
; TinyDarius
;-----------------------------------------------------------------------
[env]
;platform = espressif32
platform = espressif32@6.1.0 ; ESP-IDF 5.0.1
board = m5stack-core-esp32
;board = m5stack-grey

board_build.flash_mode = qio
board_build.f_flash = 80000000L
framework = arduino

;lib_extra_dirs = ~/projects/M5Stack/libraries/
lib_ldf_mode = deep
lib_deps = greiman/SdFat @ ^2.2.2
  https://github.com/GOB52/goblib
  https://github.com/GOB52/goblib_m5s @^0.3.0
 
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
upload_speed = 921600

build_flags = -Wall -Wextra -Wreturn-local-addr -DLGFX_AUTODETECT -DSDFAT_FILE_TYPE=3 
board_build.partitions = min_spiffs.csv

; --------------------------------
; Choose graphics library
[gl_M5GFX] ; M5Unified depends on M5GFX
lib_deps = m5stack/M5Unified @ ^0.1.6

[gl_LGFX]
lib_deps = m5stack/M5Stack @ ^0.4.3
  lovyan03/LovyanGFX @ ^1.1.6

;-----------------------------------------------------------------------
[env:master]
build_type = release
build_flags = ${env.build_flags}
 -DNDEBUG 
build_unflags = -g3
lib_deps = ${env.lib_deps}
  ${gl_LGFX.lib_deps} 

[env:master_M5GFX]
build_type = release
build_flags = ${env.build_flags}
 -DNDEBUG 
build_unflags = -g3
lib_deps = ${env.lib_deps}
  ${gl_M5GFX.lib_deps} 

[env:master_SDU]
build_type = release
build_flags = ${env.build_flags}  -DTD_ENABLE_SD_UPDATER
 -DNDEBUG 
build_unflags = -g3
lib_deps = ${env.lib_deps}
  ${gl_LGFX.lib_deps} 
  tobozo/M5Stack-SD-Updater

[env:master_M5GFX_SDU]
build_type = release
build_flags = ${env.build_flags}  -DTD_ENABLE_SD_UPDATER
 -DNDEBUG 
build_unflags = -g3
lib_deps = ${env.lib_deps}
  ${gl_M5GFX.lib_deps} 
  tobozo/M5Stack-SD-Updater

[env:master_M5GFX_SDU_DISPLAY]
build_type = release
build_flags = ${env.build_flags}  -DTD_ENABLE_SD_UPDATER -DTD_ENABLE_DISPLAY_MODULE
 -DNDEBUG 
build_unflags = -g3
lib_deps = ${env.lib_deps}
  ${gl_M5GFX.lib_deps} 
  tobozo/M5Stack-SD-Updater

;-----------------------------------------------------------------------
[env:release]
build_type = release
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}
  ${gl_LGFX.lib_deps} 

[env:release_M5GFX]
build_type = release
build_flags = ${env.build_flags}
lib_deps = ${env.lib_deps}
  ${gl_M5GFX.lib_deps} 

[env:release_SDU]
build_type = release
build_flags = ${env.build_flags} -DTD_ENABLE_SD_UPDATER
lib_deps = ${env.lib_deps}
  ${gl_LGFX.lib_deps} 
  tobozo/M5Stack-SD-Updater

[env:release_M5GFX_SDU]
build_type = release
build_flags = ${env.build_flags} -DTD_ENABLE_SD_UPDATER
lib_deps = ${env.lib_deps}
  ${gl_M5GFX.lib_deps} 
  tobozo/M5Stack-SD-Updater

[env:release_M5GFX_SDU_DISPLAY]
build_type = release
build_flags = ${env.build_flags} -DTD_ENABLE_SD_UPDATER -DTD_ENABLE_DISPLAY_MODULE
lib_deps = ${env.lib_deps}
  ${gl_M5GFX.lib_deps} 
  tobozo/M5Stack-SD-Updater

;-----------------------------------------------------------------------
[env:debug]
build_type = debug
build_flags = ${env.build_flags}
 -DDEBUG 
debug_build_flags = -O0
 -DCORE_DEBUG_LEVEL=5
lib_deps = ${env.lib_deps}
 tobozo/M5Stack-SD-Updater

;-----------------------------------------------------------------------
;[env:prepro]
;build_type = release
;build_flags = -E
