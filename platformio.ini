; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


;-----------------------------------------------------------------------
; TinyDarius
;-----------------------------------------------------------------------
[env]
platform = espressif32
board = m5stack-core-esp32
board_build.flash_mode = qio
board_build.f_flash = 80000000L
framework = arduino

;----
; If you want libraries are shared between ArduinoIDE and PlatformIO.
; lib_extra_dirs set to the ArduinoIDE library directory and remove libraries form lib_deps
;----
;lib_extra_dirs = ~/projects/M5Stack/libraries/
;lib_ldf_mode = deep

lib_deps = m5stack/M5Stack
 greiman/SdFat
 lovyan03/LovyanGFX
 https://github.com/GOB52/goblib
 https://github.com/GOB52/goblib_m5s

monitor_port = /dev/cu.SLAB_USBtoUART ; change to your port
monitor_speed = 115200
monitor_filters = time, esp32_exception_decoder

upload_port = /dev/cu.SLAB_USBtoUART ; change to your port
upload_speed = 921600

build_flags = -Wall -Wextra -Wreturn-local-addr

;-----------------------------------------------------------------------
[env:master]
build_type = release
build_flags = ${env.build_flags}
 -DLGFX_USE_V0
 -DNDEBUG 
build_unflags = -g3

[env:master_v1]
build_type = release
build_flags = ${env.build_flags}
 -DLGFX_USE_V1
 -DNDEBUG 
build_unflags = -g3

;-----------------------------------------------------------------------
[env:release]
build_type = release
build_flags = ${env.build_flags}
 -DLGFX_USE_V0

[env:release_v1]
build_type = release
build_flags = ${env.build_flags}
 -DLGFX_USE_V1

;-----------------------------------------------------------------------
[env:debug]
build_type = debug
build_flags = ${env.build_flags}
 -DDEBUG
 -DLGFX_USE_V0 
debug_build_flags = -O0
 -DCORE_DEBUG_LEVEL=5

[env:debug_v1]
build_type = debug
build_flags = ${env.build_flags}
 -DDEBUG 
 -DLGFX_USE_V1
debug_build_flags = -O0
 -DCORE_DEBUG_LEVEL=5


;-----------------------------------------------------------------------
;[env:prepro]
;build_type = release
;build_flags = -E
